name: Mobile Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK 8.x
        uses: actions/setup-java@v1
        with:
          java-version: '8.x'
      
      - name: Install flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      
      - name: Install flutter dependency packages
        run: flutter pub get
      
  deploy_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Install flutter dependency packages
        run: flutter pub get

      - name: Encode export options plist file
        run: |
          echo "${{ secrets.EXPORT_OPTIONS_PLIST }}" > ExportOptions.plist.txt
          base64 --decode ExportOptions.plist.txt > ExportOptions.plist

      - name: Encode development provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo -n ${{ secrets.IOS_PROVISIONING_PROFILE }} | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/YRZY_Hackathon_Flutter_development.mobileprovision
      
      - name: Import certificate
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      
      - name: Archive and create ipa
        run: flutter build ipa --export-options-plist=ExportOptions.plist --build-number ${GITHUB_RUN_NUMBER}

  teardown_on_success:
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs: [ deploy_android, deploy_ios ]

    steps:
      - name: Notify results to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: all
          custom_payload: | 
            {
              attachments: [{
                color: 'good',
                pretext: 'CI が成功したみたい :tada:',
                author_name: '${{ github.actor }}',
                author_icon: '${{ github.event.sender.avatar_url }}',
                text: '${{ github.event.head_commit.message }}',
                fields: [
                  {
                    title: 'repo',
                    value: `${process.env.AS_REPO}`,
                    short: false
                  },
                  {
                    title: 'commit',
                    value: `${process.env.AS_COMMIT}`,
                    short: true
                  },
                  {
                    title: 'job',
                    value: `${process.env.AS_JOB}`,
                    short: true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
  
  teardown_on_failure:
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    needs: [ deploy_android, deploy_ios ]

    steps:
      - name: Notify results to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: all
          custom_payload: | 
            {
              attachments: [{
                color: 'danger',
                pretext: 'CI が失敗したみたい... :sweat_drops:',
                author_name: '${{ github.actor }}',
                author_icon: '${{ github.event.sender.avatar_url }}',
                text: '${{ github.event.head_commit.message }}',
                fields: [
                  {
                    title: 'repo',
                    value: `${process.env.AS_REPO}`,
                    short: false
                  },
                  {
                    title: 'commit',
                    value: `${process.env.AS_COMMIT}`,
                    short: true
                  },
                  {
                    title: 'job',
                    value: `${process.env.AS_JOB}`,
                    short: true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()