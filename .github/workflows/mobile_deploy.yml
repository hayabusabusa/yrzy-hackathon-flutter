name: Mobile Deploy

on:
  push:
    branches: [ main ]

jobs:
  build_android:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK 8.x
        uses: actions/setup-java@v1
        with:
          java-version: '8.x'
      
      - name: Install flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      
      - name: Install flutter dependency packages
        run: flutter pub get

      - name: Encode release keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" > release.jks.txt
          base64 --decode release.jks.txt > release.jks

      - name: Build apk
        run: |
          export KEYSTORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}'
          export KEY_ALIAS='${{ secrets.KEY_ALIAS }}'
          export KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}'
          flutter build apk --release --build-number ${GITHUB_RUN_NUMBER}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: android
          path: build/app/outputs/flutter-apk/app-release.apk
      
  build_ios:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Install flutter dependency packages
        run: flutter pub get

      - name: Encode export options plist file
        run: |
          echo "${{ secrets.EXPORT_OPTIONS_PLIST }}" > ExportOptions.plist.txt
          base64 --decode ExportOptions.plist.txt > ExportOptions.plist

      - name: Encode provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" > development.mobileprovision.txt
          base64 --decode development.mobileprovision.txt > ~/Library/MobileDevice/Provisioning\ Profiles/YRZY_Hackathon_Flutter_development.mobileprovision
      
      - name: Import ad-hoc certificate
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      
      - name: Archive and create ipa
        run: flutter build ipa --release --export-options-plist=ExportOptions.plist --build-number ${GITHUB_RUN_NUMBER}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ios
          path: build/ios/ipa/yrzy_hackathon.ipa

  deploy:
    runs-on: ubuntu-latest
    needs: [ build_android, build_ios ]
    timeout-minutes: 20

    steps:
      - name: Download iOS artifact
        uses: actions/download-artifact@v2
        with:
          name: ios
      
      - name: Download Android artifact
        uses: actions/download-artifact@v2
        with:
          name: android

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_IOS_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: tester
          file: yrzy_hackathon.ipa
      
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: android_tester
          file: app-release.apk
      
      - name: Remove all artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '0 days'

  teardown_on_success:
    if: ${{ success() }}
    runs-on: ubuntu-latest
    needs: [ deploy ]
    timeout-minutes: 10

    steps:
      - name: DEBUG Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Notify results to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: all
          custom_payload: | 
            {
              attachments: [{
                color: 'good',
                pretext: 'CI が成功したみたい :tada:',
                author_name: '${{ github.actor }}',
                author_icon: '${{ github.event.sender.avatar_url }}',
                fields: [
                  {
                    title: 'repo',
                    value: `${process.env.AS_REPO}`,
                    short: false
                  },
                  {
                    title: 'commit',
                    value: `${process.env.AS_COMMIT}`,
                    short: true
                  },
                  {
                    title: 'job',
                    value: `${process.env.AS_JOB}`,
                    short: true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
  
  teardown_on_failure:
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    needs: [ deploy ]
    timeout-minutes: 10

    steps:
      - name: Notify results to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: all
          custom_payload: | 
            {
              attachments: [{
                color: 'danger',
                pretext: 'CI が失敗したみたい... :sweat_drops:',
                author_name: '${{ github.actor }}',
                author_icon: '${{ github.event.sender.avatar_url }}',
                fields: [
                  {
                    title: 'repo',
                    value: `${process.env.AS_REPO}`,
                    short: false
                  },
                  {
                    title: 'commit',
                    value: `${process.env.AS_COMMIT}`,
                    short: true
                  },
                  {
                    title: 'job',
                    value: `${process.env.AS_JOB}`,
                    short: true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()